+ '[' -z DS7_nnUNet ']'
+ source /vol/bitbucket/az620/radiotherapy/.venv/bin/activate
++ deactivate nondestructive
++ '[' -n '' ']'
++ '[' -n '' ']'
++ '[' -n /bin/bash -o -n '' ']'
++ hash -r
++ '[' -n '' ']'
++ unset VIRTUAL_ENV
++ unset VIRTUAL_ENV_PROMPT
++ '[' '!' nondestructive = nondestructive ']'
++ VIRTUAL_ENV=/vol/bitbucket/az620/radiotherapy/.venv
++ export VIRTUAL_ENV
++ _OLD_VIRTUAL_PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin
++ PATH=/vol/bitbucket/az620/radiotherapy/.venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin
++ export PATH
++ '[' -n '' ']'
++ '[' -z '' ']'
++ _OLD_VIRTUAL_PS1=
++ PS1='(.venv) '
++ export PS1
++ VIRTUAL_ENV_PROMPT='(.venv) '
++ export VIRTUAL_ENV_PROMPT
++ '[' -n /bin/bash -o -n '' ']'
++ hash -r
+ source /vol/bitbucket/az620/radiotherapy/data/data_vars.sh
++++ dirname -- /vol/bitbucket/az620/radiotherapy/data/data_vars.sh
+++ cd -- /vol/bitbucket/az620/radiotherapy/data
+++ pwd
++ SCRIPT_DIR=/vol/bitbucket/az620/radiotherapy/data
++ export nnUNet_raw=/vol/bitbucket/az620/radiotherapy/data/nnUNet_raw
++ nnUNet_raw=/vol/bitbucket/az620/radiotherapy/data/nnUNet_raw
++ export nnUNet_preprocessed=/vol/bitbucket/az620/radiotherapy/data/nnUNet_preprocessed
++ nnUNet_preprocessed=/vol/bitbucket/az620/radiotherapy/data/nnUNet_preprocessed
++ export nnUNet_results=/vol/bitbucket/az620/radiotherapy/data/nnUNet_results
++ nnUNet_results=/vol/bitbucket/az620/radiotherapy/data/nnUNet_results
++ export data_Anorectum=Dataset001_Anorectum
++ data_Anorectum=Dataset001_Anorectum
++ export data_Bladder=Dataset002_Bladder
++ data_Bladder=Dataset002_Bladder
++ export data_CTVn=Dataset003_CTVn
++ data_CTVn=Dataset003_CTVn
++ export data_CTVp=Dataset004_CTVp
++ data_CTVp=Dataset004_CTVp
++ export data_Parametrium=Dataset005_Parametrium
++ data_Parametrium=Dataset005_Parametrium
++ export data_Uterus=Dataset006_Uterus
++ data_Uterus=Dataset006_Uterus
++ export data_Vagina=Dataset007_Vagina
++ data_Vagina=Dataset007_Vagina
++ export data_trainingImages=imagesTr
++ data_trainingImages=imagesTr
++ export data_trainingLabels=labelsTr
++ data_trainingLabels=labelsTr
++ echo 'nnUNet_raw: /vol/bitbucket/az620/radiotherapy/data/nnUNet_raw'
++ echo 'nnUNet_preprocessed: /vol/bitbucket/az620/radiotherapy/data/nnUNet_preprocessed'
++ echo 'nnUNet_results: /vol/bitbucket/az620/radiotherapy/data/nnUNet_results'
++ echo 'data_Anorectum: Dataset001_Anorectum'
++ echo 'data_Bladder: Dataset002_Bladder'
++ echo 'data_CTVn: Dataset003_CTVn'
++ echo 'data_CTVp: Dataset004_CTVp'
++ echo 'data_Parametrium: Dataset005_Parametrium'
++ echo 'data_Uterus: Dataset006_Uterus'
++ echo 'data_Vagina: Dataset007_Vagina'
++ echo 'data_trainingImages: imagesTr'
++ echo 'data_trainingLabels: labelsTr'
+ nnUNetv2_train DS7_nnUNet 3d_fullres 0 -tr nnUNetTrainer_500epochs --npz
Traceback (most recent call last):
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 54, in get_trainer_from_args
    dataset_name_or_id = int(dataset_name_or_id)
ValueError: invalid literal for int() with base 10: 'DS7_nnUNet'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/vol/bitbucket/az620/radiotherapy/.venv/bin/nnUNetv2_train", line 8, in <module>
    sys.exit(run_training_entry())
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 268, in run_training_entry
    run_training(args.dataset_name_or_id, args.configuration, args.fold, args.tr, args.p, args.pretrained_weights,
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 189, in run_training
    nnunet_trainer = get_trainer_from_args(dataset_name_or_id, configuration, fold, trainer_class_name,
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 56, in get_trainer_from_args
    raise ValueError(f'dataset_name_or_id must either be an integer or a valid dataset name with the pattern '
ValueError: dataset_name_or_id must either be an integer or a valid dataset name with the pattern DatasetXXX_YYY where XXX are the three(!) task ID digits. Your input: DS7_nnUNet
+ nnUNetv2_train DS7_nnUNet 3d_fullres 1 -tr nnUNetTrainer_500epochs --npz
Traceback (most recent call last):
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 54, in get_trainer_from_args
    dataset_name_or_id = int(dataset_name_or_id)
ValueError: invalid literal for int() with base 10: 'DS7_nnUNet'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/vol/bitbucket/az620/radiotherapy/.venv/bin/nnUNetv2_train", line 8, in <module>
    sys.exit(run_training_entry())
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 268, in run_training_entry
    run_training(args.dataset_name_or_id, args.configuration, args.fold, args.tr, args.p, args.pretrained_weights,
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 189, in run_training
    nnunet_trainer = get_trainer_from_args(dataset_name_or_id, configuration, fold, trainer_class_name,
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 56, in get_trainer_from_args
    raise ValueError(f'dataset_name_or_id must either be an integer or a valid dataset name with the pattern '
ValueError: dataset_name_or_id must either be an integer or a valid dataset name with the pattern DatasetXXX_YYY where XXX are the three(!) task ID digits. Your input: DS7_nnUNet
+ nnUNetv2_train DS7_nnUNet 3d_fullres 2 -tr nnUNetTrainer_500epochs --npz
Traceback (most recent call last):
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 54, in get_trainer_from_args
    dataset_name_or_id = int(dataset_name_or_id)
ValueError: invalid literal for int() with base 10: 'DS7_nnUNet'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/vol/bitbucket/az620/radiotherapy/.venv/bin/nnUNetv2_train", line 8, in <module>
    sys.exit(run_training_entry())
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 268, in run_training_entry
    run_training(args.dataset_name_or_id, args.configuration, args.fold, args.tr, args.p, args.pretrained_weights,
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 189, in run_training
    nnunet_trainer = get_trainer_from_args(dataset_name_or_id, configuration, fold, trainer_class_name,
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 56, in get_trainer_from_args
    raise ValueError(f'dataset_name_or_id must either be an integer or a valid dataset name with the pattern '
ValueError: dataset_name_or_id must either be an integer or a valid dataset name with the pattern DatasetXXX_YYY where XXX are the three(!) task ID digits. Your input: DS7_nnUNet
+ nnUNetv2_train DS7_nnUNet 3d_fullres 3 -tr nnUNetTrainer_500epochs --npz
Traceback (most recent call last):
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 54, in get_trainer_from_args
    dataset_name_or_id = int(dataset_name_or_id)
ValueError: invalid literal for int() with base 10: 'DS7_nnUNet'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/vol/bitbucket/az620/radiotherapy/.venv/bin/nnUNetv2_train", line 8, in <module>
    sys.exit(run_training_entry())
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 268, in run_training_entry
    run_training(args.dataset_name_or_id, args.configuration, args.fold, args.tr, args.p, args.pretrained_weights,
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 189, in run_training
    nnunet_trainer = get_trainer_from_args(dataset_name_or_id, configuration, fold, trainer_class_name,
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 56, in get_trainer_from_args
    raise ValueError(f'dataset_name_or_id must either be an integer or a valid dataset name with the pattern '
ValueError: dataset_name_or_id must either be an integer or a valid dataset name with the pattern DatasetXXX_YYY where XXX are the three(!) task ID digits. Your input: DS7_nnUNet
+ nnUNetv2_train DS7_nnUNet 3d_fullres 4 -tr nnUNetTrainer_500epochs --npz
Traceback (most recent call last):
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 54, in get_trainer_from_args
    dataset_name_or_id = int(dataset_name_or_id)
ValueError: invalid literal for int() with base 10: 'DS7_nnUNet'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/vol/bitbucket/az620/radiotherapy/.venv/bin/nnUNetv2_train", line 8, in <module>
    sys.exit(run_training_entry())
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 268, in run_training_entry
    run_training(args.dataset_name_or_id, args.configuration, args.fold, args.tr, args.p, args.pretrained_weights,
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 189, in run_training
    nnunet_trainer = get_trainer_from_args(dataset_name_or_id, configuration, fold, trainer_class_name,
  File "/vol/bitbucket/az620/radiotherapy/models/nnUNet/nnunetv2/run/run_training.py", line 56, in get_trainer_from_args
    raise ValueError(f'dataset_name_or_id must either be an integer or a valid dataset name with the pattern '
ValueError: dataset_name_or_id must either be an integer or a valid dataset name with the pattern DatasetXXX_YYY where XXX are the three(!) task ID digits. Your input: DS7_nnUNet
